<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect data-type="rect" data-label="" data-x="0" data-y="0" x="62.458245189399776" y="239.1503173181609" width="71.86638460607924" height="161.69936536367825" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="-0.2" data-y="-1.0299999999999998" x="80.42484134091958" y="218.4887317439131" width="0" height="17.96659615151981" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="-0.2" data-y="1.0299999999999998" x="71.44154326515968" y="403.5446721045671" width="17.96659615151981" height="17.96659615151981" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="5" data-y="0" x="507.1316796054765" y="269.51843362979764" width="80.84932334991622" height="100.96313274040467" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="-0.6000000000000001" data-y="0.7" x="40.00000000000001" y="378.39143749243937" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="-0.6000000000000001" data-y="0.49999999999999994" x="40.00000000000001" y="360.42484134091956" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="-0.6000000000000001" data-y="0.29999999999999993" x="40.00000000000001" y="342.45824518939975" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="-0.6000000000000001" data-y="0.09999999999999987" x="40.00000000000001" y="324.49164903787994" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="-0.6000000000000001" data-y="-0.10000000000000009" x="40.00000000000001" y="306.52505288636013" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="-0.6000000000000001" data-y="-0.30000000000000004" x="40.00000000000001" y="288.5584567348403" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="-0.6000000000000001" data-y="-0.5" x="40.00000000000001" y="270.59186058332057" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="-0.6000000000000001" data-y="-0.7" x="40.00000000000001" y="252.62526443180076" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="0.6000000000000001" data-y="-0.7" x="147.79957690911885" y="252.62526443180076" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="0.6000000000000001" data-y="-0.49999999999999994" x="147.79957690911885" y="270.59186058332057" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="0.6000000000000001" data-y="-0.29999999999999993" x="147.79957690911885" y="288.5584567348404" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="0.6000000000000001" data-y="-0.09999999999999987" x="147.79957690911885" y="306.5250528863602" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="0.6000000000000001" data-y="0.10000000000000009" x="147.79957690911885" y="324.49164903788" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="0.6000000000000001" data-y="0.30000000000000004" x="147.79957690911885" y="342.4582451893998" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="0.6000000000000001" data-y="0.5" x="147.79957690911885" y="360.42484134091956" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="0.6000000000000001" data-y="0.7" x="147.79957690911885" y="378.39143749243937" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="4.4662093" data-y="0.045805199999999324" x="495.1126825608694" y="319.62316861231795" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <rect data-type="rect" data-label="" data-x="5.533790700000001" data-y="0.04525870000000065" x="591.0167019242401" y="319.57407488833405" width="8.983298075759905" height="8.983298075759905" fill="none" stroke="black" />
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 89.83298075759905,
        "c": 0,
        "e": 98.3914374924394,
        "b": 0,
        "d": 89.83298075759905,
        "f": 320
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: -(y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>